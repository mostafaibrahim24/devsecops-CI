name: Pet Clinic Workflow
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
jobs:
  secret-scanning:
    name: Secret scanning
    runs-on: ubuntu-latest
    # continue-on-error: true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Truffle Hog scan
        uses: trufflesecurity/trufflehog@main
        with:
          extra_args: --results=verified,unknown
      - name: Slack notify on failure
        uses: slackapi/slack-github-action@v2.0.0
        if: failure()
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*Alert! :rotating_light: *: ${{ github.job }}"
            blocks:
               - type: "section"
                text:
                  type: "mrkdwn"
                  text: "${{ github.job }} in workflow ${{ github.workflow }} is of status ${{ job.status }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Repo*\n<https://github.com/${{ github.repository }}|${{ github.repository }}>"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Commit*\n*Message*${{ github.event.head_commit.message }}\n<${{ github.event.head_commit.url }}|${{ env.SHORT_SHA }}>"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Author*\n${{ github.event.head_commit.author.name }}" 
  dependency-scanning:
    runs-on: ubuntu-latest
    name: depcheck
    needs: secret-scanning
    # continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore Maven packages
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Build project with Maven
        run: mvn clean install -DskipTests
      - name: Cache Maven packages
        id: cache-maven
        uses: actions/cache/save@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired
      - name: Upload Test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
      - name: Slack notify on failure
        uses: slackapi/slack-github-action@v2.0.0
        if: failure()
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "icon_emoji": ":robot_face:", 
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Pipeline Alert! :rotating_light: *",
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Job* `${{ github.job }}` in *workflow* `${{ github.workflow }}` has failed"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Commit of message `${{ github.event.head_commit.message }}` commited by ${{ github.event.head_commit.author.name }} has resulted in the failure of the job\nRef: <${{ github.event.head_commit.url }}|${{ github.sha }}>"
                  }
                },
              ]
            }   
  compile:
    name: Compile code
    runs-on: ubuntu-latest
    needs: dependency-scanning
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11.0.25+9' 
          distribution: 'temurin'
      - name: Restore Maven packages
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Compile
        run: mvn clean compile
  test:
    name: Unit test and generate code coverage
    runs-on: ubuntu-latest
    needs: compile
    # continue-on-error: true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11.0.25+9' 
          distribution: 'temurin'
      - name: Restore Maven packages
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Maven test
        run: mvn test
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage.html
          path: target/site/jacoco/
  analyze-sonar:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: test
    # continue-on-error: true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11.0.25+9' 
          distribution: 'temurin'
      - name: Restore Maven packages
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=mostafaibrahim24_devsecops-CI
  build-jar:
    name: Build - Jar artifact
    runs-on: ubuntu-latest
    needs: analyze-sonar
    # continue-on-error: true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11.0.25+9' 
          distribution: 'temurin'
      - name: Restore Maven packages
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Maven Build
        run: mvn clean package
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: petclinic.jar
          path: target/*.jar
  trivy-scan:
    name: Build the docker image and scan using trivy
    runs-on: ubuntu-latest
    needs: build-jar
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Build an image from Dockerfile
        run: docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/petclinic .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/petclinic
          format: table
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
  push-image:
      name: Build and push to registry
      runs-on: ubuntu-latest
      needs: trivy-scan
      steps:
        - name: Registry login
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/petclinic:latest
      
  
