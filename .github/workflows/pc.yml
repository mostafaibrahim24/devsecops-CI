name: Pet Clinic Workflow
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
jobs:
  secret-scanning:
    name: Secret scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Truffle Hog scan
        uses: trufflesecurity/trufflehog@main
        with:
          extra_args: --results=verified,unknown
  dependency-scanning:
    runs-on: ubuntu-latest
    name: depcheck
    needs: secret-scanning
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache Maven packages
        id: cache-maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build project with Maven
        run: mvn clean install -DskipTests
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired
      - name: Upload Test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
  test:
    name: Unit test and generate code coverage
    runs-on: ubuntu-latest
    needs: dependency-scanning
    continue-on-error: true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11.0.25+9' 
          distribution: 'temurin'
      - name: Maven test
        run: mvn test
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage.html
          path: target/site/jacoco/
  analyze-sonar:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: test
    continue-on-error: true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11.0.25+9' 
          distribution: 'temurin'
      - name: Cache Maven packages
        id: cache-maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=mostafaibrahim24_devsecops-CI
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: analyze-sonar
    continue-on-error: true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11.0.25+9' 
          distribution: 'temurin'
      - name: Cache Maven packages
        id: cache-maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Maven Build
        run: mvn clean package
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: petclinic.jar
          path: target/*.jar
      
  
